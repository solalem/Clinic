@page "/Appointments/Patients/new"
@using Clinic.ViewModels;
@inject ILogger<Create> Logger
@inject IJSRuntime JSRuntime

@inherits BlazorPage

@namespace Clinic.Web.Areas.Appointments.Pages.Patients
@using Clinic.ViewModels.Appointments
@using Clinic.Web.Models;
@using Clinic.Web.Shared.Components;

<div class="sticky-top">
    <Bar Breakpoint="Breakpoint.Desktop" Background="Background.White" ThemeContrast="ThemeContrast.Light" Shadow="Shadow.Remove">
        <BarToggler />
        <BarMenu>
            <BarStart>
                <BarItem>
                    <Button Type="ButtonType.Submit" Shadow="Shadow.Remove" form="createForm">Create</Button>
                </BarItem>
            </BarStart>
            <BarEnd>
                <BarItem>
                    <Button Type="ButtonType.Submit" Shadow="Shadow.Remove" Clicked="() => NavigationManager.NavigateTo(_pageState.PreviousPage())">
                        <Icon Name="IconName.Times"></Icon>
                    </Button>
                </BarItem>
            </BarEnd>
        </BarMenu>
    </Bar>
</div>

@if (Item == null)
{
    <Spinner></Spinner>
}
else
{
<Container>
    <Row>
        <Column ColumnSize="ColumnSize.Is8">

            <EditForm Model="Item" OnValidSubmit="@CreateClick" id="createForm">
                <DataAnnotationsValidator />
                    <div class="container">
                        <br/>

                    <Field>
                        <FieldLabel>Card Number:</FieldLabel>
                        <TextEdit @bind-Text="@Item.CardNumber" />
                        <ValidationMessage For="(() => Item.CardNumber)" />
                    </Field>

                    <Field>
                        <FieldLabel>Full Name:</FieldLabel>
                        <TextEdit @bind-Text="@Item.FullName" />
                        <ValidationMessage For="(() => Item.FullName)" />
                    </Field>

                    <Field>
                        <FieldLabel>Gender:</FieldLabel>
                        <TextEdit @bind-Text="@Item.Gender" />
                        <ValidationMessage For="(() => Item.Gender)" />
                    </Field>

                    <Field>
                        <FieldLabel>Phone Number:</FieldLabel>
                        <TextEdit @bind-Text="@Item.PhoneNumber" />
                        <ValidationMessage For="(() => Item.PhoneNumber)" />
                    </Field>

                    <Field>
                        <FieldLabel>Date Of Birth:</FieldLabel>
                        <DatePicker DateChanged="((x) => Item.DateOfBirth = x)" TValue="DateTimeOffset?" Date="Item.DateOfBirth" />
                        <ValidationMessage For="(() => Item.DateOfBirth)" />
                    </Field>

                    <Field>
                        <FieldLabel>Email:</FieldLabel>
                        <TextEdit @bind-Text="@Item.Email" />
                        <ValidationMessage For="(() => Item.Email)" />
                    </Field>
                </div>
            </EditForm>
        </Column>
        <Column ColumnSize="ColumnSize.Is4">
            <Card>
                <CardHeader>
                    <CardTitle>Help</CardTitle>
                </CardHeader>
                <CardBody>
                    No help available.
                </CardBody>
            </Card>
        </Column>
    </Row>
</Container>
}
